name: Prod Deployment

on:
  workflow_dispatch:

jobs:

  prod-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: postory/backend/.
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend_prod:latest
          
  prod-deploy:
    needs: prod-build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker rm -f mongo_prod || true
            sudo docker run -d --restart always -p 2717:27017 --volume mongo_database_prod:/data/db --env MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_USERNAME }} --env MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_PASSWORD }} --name mongo_prod mongo:latest || true
            sudo docker rm -f backend_prod || true
            sudo docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/backend_prod:latest || true
            sudo docker run -d --restart always -p 80:80 --link mongo_prod --name backend_prod \
              --env MONGO_USERNAME=${{ secrets.MONGO_USERNAME }} \
              --env MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
              --env SECRET_KEY="${{ secrets.SECRET_KEY }}" \
              --env GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/backend_prod:latest bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:80" || true
